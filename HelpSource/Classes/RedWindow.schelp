CLASS:: RedWindow
SUMMARY:: wrapper for UserView
CATEGORIES:: Red>redUniverse
RELATED:: Overviews/redUniverseExamplesOverview

DESCRIPTION::
Convenience class. Replaces link::Classes/Window:: + link::Classes/UserView::. Requires link::Classes/RedVector::.

CLASSMETHODS::

METHOD:: new

ARGUMENT:: name
Window title.

ARGUMENT:: bounds
Window position and size.

INSTANCEMETHODS::

PRIVATE:: initRedWindow

METHOD:: draw
Alias for link::Classes/UserView#-drawFunc::.

METHOD::play
Starts an internal thread on the link::Classes/AppClock:: updating at rate strong::fps::.

METHOD:: stop
Stop internal thread.

METHOD:: resize
Change window size while keeping x and y position. The argument can also be a link::Classes/RedVector::

METHOD:: isOpen
Boolean.

METHOD:: mouse
Returns a link::Classes/RedVector:: for mouse x and y position. Click&drag in window to set position.

METHOD:: isPlaying
If the window is updating.

METHOD:: clear
Clear the internal link::Classes/UserView:: once. Useful when drawing with the code::clearOnRefresh:: flag set to false.

METHOD:: userView
NOTE:: DEPRECATED::

EXAMPLES::

CODE::
w= RedWindow.new.front;
w.resize(RedVector2D[200, 200])
w.background= Color.red

w.draw{Pen.fillColor= Color.black; Pen.fillOval(Rect.aboutPoint(Point(175.rand, 175.rand), 50, 50))}
w.play	//start drawing
w.stop

(	//mouse control
w.draw{
	var radius= 100.rand;
	Pen.fillColor= Color.blue(0.5, radius/100);
	Pen.fillOval(Rect.aboutRedVector2D(w.mouse, radius))
}
)
w.play
w.mouse
w.isPlaying
w.isOpen
w.frame
w.frameRate
w.stop
w.close
::
